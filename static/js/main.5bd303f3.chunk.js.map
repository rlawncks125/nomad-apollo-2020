{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/App.js","apollo.js","index.js"],"names":["LIKE_MOVIE","gql","Container","styled","div","Poster","props","bg","Movie","id","isLiked","useMutation","variables","parseInt","toggleMovie","to","onClick","GET_MOVIES","Header","header","Title","h1","Subtitle","h3","Loading","Movies","Home","useQuery","loading","data","movies","map","m","language","medium_cover_image","GET_MOVIE","Column","h4","Description","p","Detail","useParams","movie","title","rating","description_intro","App","exact","path","component","client","ApolloClient","uri","resolvers","Mutation","toggleLikeMovie","_","cache","writeData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bd303f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nconst LIKE_MOVIE = gql`\r\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\r\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 400px;\r\n  border-radius: 7px;\r\n  width: 100%;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  background-color: transparent;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 100%;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst Movie = ({ id, bg, isLiked }) => {\r\n  const [toggleMovie] = useMutation(LIKE_MOVIE, {\r\n    variables: { id: parseInt(id), isLiked },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Link to={`/${id}`}>\r\n        <Poster bg={bg} />\r\n      </Link>\r\n      <button onClick={toggleMovie}>{isLiked ? \"Unlike\" : \"Like\"}</button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"../components/Movie\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n// import { renderIntoDocument } from \"react-dom/test-utils\";\r\n\r\nconst GET_MOVIES = gql`\r\n  {\r\n    movies(limit: 25) {\r\n      id\r\n      title\r\n      rating\r\n      description_intro\r\n      language\r\n      medium_cover_image\r\n      isLiked @client\r\n      genres\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  height: 45vh;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 60px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  font-size: 18px;\r\n  opacity: 0.5;\r\n  font-weight: 500;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Movies = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 25px;\r\n  width: 60%;\r\n  position: relative;\r\n  top: -50px;\r\n`;\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(GET_MOVIES);\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>Apollo 2020</Title>\r\n        <Subtitle>I love GraphQL</Subtitle>\r\n      </Header>\r\n      {loading && <Loading>Loading...</Loading>}\r\n      <Movies>\r\n        {data?.movies?.map((m) => {\r\n          if (m.language === \"\") return \"\";\r\n\r\n          return (\r\n            <Movie\r\n              key={m.id}\r\n              id={m.id}\r\n              isLiked={m.isLiked}\r\n              bg={m.medium_cover_image}\r\n            />\r\n          );\r\n        })}\r\n      </Movies>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\n//\r\n//getMoive 아폴로가 변수의 타입을 검사하도록 도와줌\r\nconst GET_MOVIE = gql`\r\n  query getMoive($id: Int!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      rating\r\n      description_intro\r\n      language\r\n      medium_cover_image\r\n      genres\r\n      isLiked @client\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  margin-left: 10px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 65px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n  font-size: 35px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 28px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  width: 25%;\r\n  height: 60%;\r\n  background-color: transparent;\r\n  background-image: url(${(props) => props.bg});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams();\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id: parseInt(id) },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Column>\r\n        <Title>\r\n          {loading\r\n            ? \"Loading...\"\r\n            : `${data?.movie?.title} ${data?.movie?.isLiked ? \"💖\" : \"😞\"}`}\r\n        </Title>\r\n        <Subtitle>\r\n          {data?.movie?.language} · {data?.movie?.rating}\r\n        </Subtitle>\r\n        <Description>{data?.movie?.description_intro}</Description>\r\n      </Column>\r\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Detail from \"../routes/Detail\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/:id\" component={Detail} />\n    </Router>\n  );\n};\n\nexport default App;\n","import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\",\n  resolvers: {\n    Movie: {\n      isLiked: () => false,\n    },\n    Mutation: {\n      toggleLikeMovie: (_, { id, isLiked }, { cache }) => {\n        cache.writeData({ id: `Movie:${id}`, data: { isLiked: !isLiked } });\n      },\n    },\n  },\n});\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport client from \"./apollo\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}